clear;
clc;
close all;
k=2;
syms x
Gegenoneovertwo=gegenbauerC(k,1/2,x);
diffGegenoneovertwo(x)=diff(Gegenoneovertwo,x);


Gegenthreeovertwo=gegenbauerC(k-1,3/2,x);
diffGegenthreeovertwo(x)=diff(Gegenthreeovertwo,x);

%a=zeros(3,k+1);
%for i=1:k+1
%x=rand(1,3);
%a(:,i)=x'/norm(x);
%end

%a=[-.962110407959442, -.211417294179026, -.172180982375314;-.0917140620969262, .989002178900472, -.11603112059399;.410386993978472, -.725295785362625, -.552746360308321;.57065831715715, .00126270293388618, .821186635675029;.195841697823354, -.0962555385036475, -.97590004647273;.140281073335604,-.592624038592789,.793169571668127;-.840938560236222,.131538146854321,.524900041713751];
%a=[-.962110407959442, -.211417294179026, -.172180982375314;-.0917140620969262, .989002178900472, -.11603112059399;.410386993978472, -.725295785362625, -.552746360308321;.57065831715715, .00126270293388618, .821186635675029;.195841697823354, -.0962555385036475, -.97590004647273];

% G=zeros(k+1,k+1);
%a=zeros(k+1,3);

% for i=1:k+1
%     theta=(pi)*rand(1);
%     phi=2*pi*rand(1);
%     x=sin(theta)*cos(phi);
%     y=sin(theta)*sin(phi);
%     z=cos(theta);
%     a(i,1)=x;
%     a(i,2)=y;
%     a(i,3)=z;
% %       c(i)=[x;y;z];
% end

% Good one Green
%a=[0.338697302058063   0.175744308003532  0.924336559800027;  0.455569105113474   0.573207545549534  -0.681094633800023; 0.583522346782549  -0.250680170199832  -0.772438426720195];

% 1
%a=[-0.299515156736879, -0.713883685703664, -0.632977688525461;-0.655842420800517, 0.711864192019322, 0.251237121459381;0.103087150154712, -0.536237403991797, -0.837748462268429];

% 2
%a=[0.753452677481680, -0.358104926263249, 0.551425357216805;-0.988324316733217, 0.082210475722329, -0.128282822838162;-0.870893727425631, 0.302559097661312, -0.387301055966885];

% 3
%a=[-0.998339528025292, -0.053423594070243, 0.021543128344219; 0.332949919186995, -0.735827489149023, 0.589662833766906; -0.597848049074745, -0.763960065909886, -0.242781234679463];

% 4
%a=[0.376525162657850, -0.924077228788458, 0.065651177598910; -0.283112465517939, 0.385950574704834, 0.878003123999774; 0.707695411196731, -0.699360114704373, 0.100312685796844];

% 5
%a=[-0.078201764197916  -0.165470515326948   0.983109349275943;0.293431722313200  -0.776791238412154   0.557219163585048;0.572827045157400   0.338704317307587   0.746423848609785];

% 6
%a=[0.355080015798868  -0.097122508932583   0.929777070398553;0.185308683769133  0.282542787448155   0.941185563521231;0.963590685239774   -0.265777171175465   -0.029248702554318];

% 7 
%a=[-0.207181171952265, -0.307930804465710, -0.928576642851621;0.289684772940537, -0.403338785551058, 0.867986495515101;-0.371001193374909, -0.772423598080903, 0.515480261156667];

% 8 
a=[-0.070661273667451, 0.413721352696535, -0.907657218737692;0.624902308735822, 0.437032307400501, 0.646915656654585;-0.316203770706512, -0.875331237083970, -0.365801039878279];

% 9 
%a=[0.347049081942196, -0.112228012931986, -0.931107838994183;-0.900463628633503, 0.364762466769034, -0.236883085813983;0.078564563802751, -0.803278085590013, 0.590399802274126];


% % for i=1:k+1
% %         for j=1:k+1
% %         G(i,j)=(2*k+1)*gegenbauerC(k,1/2,dot(a(i,:),a(j,:)))*;
% %         end
% % end

T=zeros(1,101);
objectiveFun=0;

for l=1:k+1
for j=1:k+1
    if (l<j) 
    objectiveFun=objectiveFun+(k+1)^2*(gegenbauerC(k,1/2,dot(a(l,:),a(j,:))))^2+(1-(dot(a(l,:),a(j,:)))^2)*(gegenbauerC(k-1,3/2,dot(a(l,:),a(j,:))))^2;
    end
end
end

objectiveFun


T(1)=objectiveFun;

for p=1:100


n=randi([1,k+1]);
% 
w=zeros(1,3);
for j=1:k+1
    if ~(j==n)  
    w=w-((k+1)^2*gegenbauerC(k,1/2,dot(a(n,:),a(j,:)))*diffGegenoneovertwo(dot(a(n,:),a(j,:))) ...
        -dot(a(n,:),a(j,:))*(gegenbauerC(k-1,3/2,dot(a(n,:),a(j,:))))^2 ...
        +(1-(dot(a(n,:),a(j,:)))^2)*gegenbauerC(k-1,3/2,dot(a(n,:),a(j,:)))*diffGegenthreeovertwo(dot(a(n,:),a(j,:)))).*(-a(j,:)+dot(a(n,:),a(j,:)).*a(n,:));
    end
end
%end


w=vpa(w/(norm(w)));


syms t
objectiveFun=0;
for j=1:k+1
    for l=1:k+1
        if ~(n==j) && ~(n==l) && (l<j)
            objectiveFun=objectiveFun+(k+1)^2*(gegenbauerC(k,1/2,dot(a(l,:),a(j,:))))^2+(1-(dot(a(l,:),a(j,:)))^2)*(gegenbauerC(k-1,3/2,dot(a(l,:),a(j,:))))^2;
        end
    end
end

for j=1:k+1
    if ~(n==j)
        objectiveFun=objectiveFun+(k+1)^2*(gegenbauerC(k,1/2,dot(cos(t)*a(n,:)+sin(t)*w,a(j,:))))^2+(1-(dot(cos(t)*a(n,:)+sin(t)*w,a(j,:)))^2)*(gegenbauerC(k-1,3/2,dot(cos(t)*a(n,:)+sin(t)*w,a(j,:))))^2;
    end
end
% 
% % Define the objective function as an anonymous function
f = @(t) double(subs(objectiveFun, t));
% 
% % Perform the optimization
[tmin, fval] = fminbnd(f, 0, 4*pi);

if ~(fval>T(p))
    a(n,:)=cos(tmin)*a(n,:)+sin(tmin)*w;
end 
objectiveFun=0;

for l=1:k+1
for j=1:k+1
    if (l<j) 
    objectiveFun=objectiveFun+(k+1)^2*(gegenbauerC(k,1/2,dot(a(l,:),a(j,:))))^2+(1-(dot(a(l,:),a(j,:)))^2)*(gegenbauerC(k-1,3/2,dot(a(l,:),a(j,:))))^2;
    end
end
end

T(p+1)=objectiveFun;
p+1
w
objectiveFun
end
% 
% end
% 
% a
% 

objectiveFun=0;

for l=1:k+1
for j=1:k+1
    if (l<j) 
    objectiveFun=objectiveFun+(k+1)^2*(gegenbauerC(k,1/2,dot(a(l,:),a(j,:))))^2+(1-(dot(a(l,:),a(j,:)))^2)*(gegenbauerC(k-1,3/2,dot(a(l,:),a(j,:))))^2;
    end
end
end

objectiveFun

plot(T,'DisplayName','Steps of Convergence','LineWidth',3);
legend('Location','northeast','FontSize', 20)
grid on
hold on
plot(T,'*y','DisplayName','')
hold on